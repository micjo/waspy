{% extends "base.jinja2" %}
{% import "ui_elements.jinja2" as ui_elements %}

{%set url = '/api/' + prefix %}
{%set winTitle =  config[prefix]["title"] %}
{%set first_name = config[prefix]["first_name"] %}
{%set second_name = config[prefix]["second_name"] %}
{%set first_load = config[prefix]["first_load"] %}
{%set second_load = config[prefix]["second_load"] %}

{% block content %}

<hr>
<div class="clearfix">
    <h3 class="float-start"> {{winTitle}}  </h3>
    <h5 class="clearfix float-end">
        <span class="badge bg-info" id="{{prefix}}_brief_status">-</span>
        <span class="spinner-border spinner-border-sm" id="{{prefix}}_moving_status" style="display:none"></span>
        <span class="badge badge-danger" id="{{prefix}}_sanity_status">Not Running</span>
    </h5>
</div>
<hr>

<table class="table table-striped table-hover table-sm">
    <thead>  {{ ui_elements.tableHeader() }} </thead>
    <tbody>
        {{ ui_elements.value_row('Request Acknowledge:', prefix+'_request_id') }}
        {{ ui_elements.value_row('Request Finished:', prefix+'_request_finished') }}
        {{ ui_elements.value_row('Error:', prefix+'_error') }}
        {{ ui_elements.value_row('Expiry Date:', prefix+'_expiry') }}
        {{ ui_elements.value_row_input(first_name+':', 'max_aml.sendFloat', url, prefix, 'first', 'set_m1_target_position', 'move')}}
        {{ ui_elements.value_row_input(second_name+':', 'max_aml.sendFloat', url, prefix, 'second', 'set_m2_target_position', 'move')}}
    </tbody>
</table>

<div class="clearfix"><div class="btn-group float-end">
{{ ui_elements.buttonSpinnerWithCall("Move Both", "max_aml.submit", url, prefix, 'submit') }}
{{ ui_elements.buttonWithCall("Load", ui_elements.func3("max_aml.load", prefix, first_load, second_load ))}}
{{ ui_elements.buttonSpinnerWithRequest("hide", "max_aml.sendARequest", url, prefix, 'hide', '{"hide":true}') }}
{{ ui_elements.buttonSpinnerWithRequest("show", "max_aml.sendARequest", url, prefix, 'show', '{"hide":false}') }}
{{ ui_elements.buttonSpinnerWithRequest("continue", "max_aml.sendARequest", url, prefix, 'continue', '{"continue":true}') }}
</div></div>

<hr>
<table class="table table-striped table-sm">
    <thead>
        <tr> <th scope="col">{{first_name}} Control</th> <th scope="col">Value</th> <th scope="col">Control</th> </tr>
    </thead>
    <tbody>
{{ ui_elements.value_row_button('Temperature','Get Temperature', 'max_aml.sendARequest',  url, prefix, 'first_temperature', '{"get_m1_temperature":true}')}}
{{ ui_elements.value_row_button('Position','Get Position', 'max_aml.sendARequest',  url, prefix, 'adv_first_position', '{"get_m1_position":true}')}}
{{ ui_elements.value_row_input('Redefine step counter:','max_aml.sendFloat',  url, prefix, 'first_step', 'set_m1_step_counter','redefine')}}
{{ ui_elements.value_row_input('Redefine motor position:','max_aml.sendFloat',  url, prefix, 'first_position', 'set_m1_position','redefine')}}
{{ ui_elements.value_row_input('Redefine offset:','max_aml.sendFloat',  url, prefix, 'first_offset', 'set_m1_offset','redefine')}}
{{ ui_elements.value_row_toggle('Updating Position:','max_aml.toggle',  url, prefix, 'update_m1_position', 'toggle_get_m1_position')}}
{{ ui_elements.value_row_toggle('Updating Temperature:','max_aml.toggle',  url, prefix, 'update_m1_temperature', 'toggle_get_m1_temperature')}}
    </tbody>
    <thead>
        <tr> <th scope="col">{{second_name}} Control</th> <th scope="col">Value</th> <th scope="col">Control</th> </tr>
    </thead>
    <tbody>
{{ ui_elements.value_row_button('Temperature','Get Temperature', 'max_aml.sendARequest',  url, prefix, 'second_temperature', '{"get_m2_temperature":true}')}}
{{ ui_elements.value_row_button('Position','Get Position', 'max_aml.sendARequest',  url, prefix, 'adv_second_position', '{"get_m2_position":true}')}}
{{ ui_elements.value_row_input('Redefine step counter:','max_aml.sendFloat',  url, prefix, 'second_step', 'set_m2_step_counter','redefine')}}
{{ ui_elements.value_row_input('Redefine motor position:','max_aml.sendFloat',  url, prefix, 'second_position', 'set_m2_position','redefine')}}
{{ ui_elements.value_row_input('Redefine offset:','max_aml.sendFloat',  url, prefix, 'second_offset', 'set_m2_offset', 'redefine')}}
{{ ui_elements.value_row_toggle('Updating Position:','max_aml.toggle',  url, prefix, 'update_m2_position', 'toggle_get_m2_position')}}
{{ ui_elements.value_row_toggle('Updating Temperature:','max_aml.toggle',  url, prefix, 'update_m2_temperature', 'toggle_get_m2_temperature')}}
    </tbody>
    <thead>
        <tr> <th scope="col">Debug Control</th> <th scope="col">Value</th> <th scope="col">Control</th> </tr>
    </thead>
    <tbody>
{{ ui_elements.value_row_toggle('Debugging rs232:','max_aml.toggle',  url, prefix, 'debug_rs232', 'debug_rs232')}}
{{ ui_elements.value_row_toggle('Debug broker:','max_aml.toggle',  url, prefix, 'debug_broker', 'debug_broker')}}
{{ ui_elements.value_row_toggle('Debug aml:','max_aml.toggle',  url, prefix, 'debug_aml', 'debug_aml')}}
    </tbody>
</table>

<script type="module">
    import * as max_aml from '{{url_for('static', path='max_aml.js')}}'
    window.max_aml = max_aml;
    max_aml.refreshData('{{url}}','{{prefix}}', max_aml.updateUi);
    window.setInterval(function() {
        max_aml.refreshData('{{url}}','{{prefix}}', max_aml.updateUi);
    }, 2000);
</script>

{% endblock %}#}
